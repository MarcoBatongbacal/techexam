{"remainingRequest":"C:\\Users\\Maco\\Desktop\\technical-exam\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Maco\\Desktop\\technical-exam\\src\\components\\dialogs\\PaymentsFormDialog.vue?vue&type=style&index=0&id=4e38264d&lang=postcss&scoped=true&","dependencies":[{"path":"C:\\Users\\Maco\\Desktop\\technical-exam\\src\\components\\dialogs\\PaymentsFormDialog.vue","mtime":1647524337915},{"path":"C:\\Users\\Maco\\Desktop\\technical-exam\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Maco\\Desktop\\technical-exam\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Maco\\Desktop\\technical-exam\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Maco\\Desktop\\technical-exam\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Maco\\Desktop\\technical-exam\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCnYtZGl2aWRlciB7DQogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZjFmMWYxOw0KfQ0K"},{"version":3,"sources":["PaymentsFormDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA","file":"PaymentsFormDialog.vue","sourceRoot":"src/components/dialogs","sourcesContent":["<template>\r\n  <div>\r\n    <v-row justify=\"center\">\r\n      <v-dialog\r\n        v-model=\"show\"\r\n        transition=\"dialog-bottom-transition\"\r\n        max-width=\"600px\"\r\n      >\r\n        <v-snackbar\r\n          :timeout=\"snackBar.timeout\"\r\n          :value=\"snackBar.display\"\r\n          :color=\"snackBar.color\"\r\n          absolute\r\n          right\r\n          top\r\n        >\r\n          <v-icon left> mdi-alert-circle </v-icon>\r\n          {{ snackBar.message }}\r\n        </v-snackbar>\r\n        <v-card>\r\n          <v-toolbar dark color=\"primary\">\r\n            <v-btn icon dark @click=\"closeDialog()\">\r\n              <v-icon>mdi-close</v-icon>\r\n            </v-btn>\r\n            <v-spacer></v-spacer>\r\n          </v-toolbar>\r\n          <v-card-title> Payment Form </v-card-title>\r\n          <v-card-subtitle> </v-card-subtitle>\r\n          <v-card-text>\r\n            <v-form ref=\"form\">\r\n              <v-row>\r\n                <v-col class=\"col-md-12\">\r\n                  <v-text-field\r\n                    v-model=\"payment.description\"\r\n                    label=\"Payment Description\"\r\n                    :disabled=\"formDisabled\"\r\n                  ></v-text-field>\r\n                </v-col>\r\n                <v-col class=\"col-md-12\">\r\n                  <v-select\r\n                    v-model=\"payment.type_key\"\r\n                    :items=\"paymentTypes\"\r\n                    item-text=\"paymentName\"\r\n                    item-value=\"value\"\r\n                    label=\"Payment Type\"\r\n                    @change=\"changeForm(payment.type_key)\"\r\n                  ></v-select>\r\n                </v-col>\r\n                <v-col class=\"col-md-12\">\r\n                  <v-text-field\r\n                    v-model=\"payment.amount\"\r\n                    label=\"Payment Amount\"\r\n                    type=\"number\"\r\n                    :disabled=\"formDisabled\"\r\n                  ></v-text-field>\r\n                </v-col>\r\n                <template>\r\n                <v-divider></v-divider>\r\n                <v-card-title style=\"font-size: 14px;\"> Remitter </v-card-title>\r\n                <v-col class=\"col-md-12\">\r\n                  <v-combobox\r\n                    v-model=\"payment.remitter_account_id\"\r\n                    label=\"Seach Remitter\"\r\n                    :items=\"accounts\"\r\n                    item-text=\"name\"\r\n                    item-value=\"id\"\r\n                    return-object\r\n                    persistent-hint\r\n                    @keyup=\"listAccountsType\"\r\n                    @change=\"resetAccounts\"\r\n                    @click=\"resetAccounts\"\r\n                  >\r\n                  </v-combobox>\r\n                </v-col>\r\n                </template>\r\n              </v-row>\r\n              <v-row v-if=\"action == 'Add' || action == 'Edit'\">\r\n                <v-col class=\"col-md-4 offset-md-8 text-right mt-2\">\r\n                  <v-btn depressed color=\"primary\" @click=\"saveAccount()\">\r\n                    Save\r\n                  </v-btn>\r\n                </v-col>\r\n              </v-row>\r\n            </v-form>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-dialog>\r\n    </v-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AccountFormDialog\",\r\n  props: {\r\n    value: Boolean,\r\n    paymentData: Object,\r\n    action: String,\r\n  },\r\n  computed: {\r\n    show: {\r\n      get() {\r\n        return this.value;\r\n      },\r\n      set(value) {\r\n        this.$emit(\"input\", value);\r\n      },\r\n    },\r\n    payment: {\r\n      get() {\r\n        let paymentDataCache = this.paymentData;\r\n\r\n        return paymentDataCache;\r\n      },\r\n    },\r\n    formDisabled: {\r\n      get() {\r\n        let _action = false;\r\n        if (this.action == \"View\") {\r\n          _action = true;\r\n        }\r\n        if (this.action == \"Edit\" || this.action == \"Add\") {\r\n          _action = false;\r\n        }\r\n        return _action;\r\n      },\r\n    },\r\n  },\r\n  data: () => ({\r\n    menu: false,\r\n    snackBar: {\r\n      display: false,\r\n      message: \"\",\r\n      color: \"\",\r\n      timeout: 2000,\r\n    },\r\n    paymentTypes: [\r\n      {\r\n        paymentName: \"Internal\",\r\n        value: \"internal\",\r\n      },\r\n      {\r\n        paymentName: \"Incoming\",\r\n        value: \"incoming\",\r\n      },\r\n      {\r\n        paymentName: \"Outgoing\",\r\n        value: \"outgoing\",\r\n      },\r\n    ],\r\n    accounts: [],\r\n    searchAccount: \"\",\r\n  }),\r\n  methods: {\r\n    async resetSnackBar() {\r\n      var _this = this;\r\n      _this.snackBar = {\r\n        display: false,\r\n        message: \"\",\r\n        color: \"\",\r\n        timeout: 2000,\r\n      };\r\n    },\r\n    async closeDialog() {\r\n      this.$emit(\"response\", \"\");\r\n      this.show = false;\r\n    },\r\n    async changeForm(paymentType) {\r\n      console.log(paymentType);\r\n    },\r\n    // async listAccounts() {\r\n    //   const response = await axios({\r\n    //     method: \"post\",\r\n    //     data: {\r\n    //       name: this.search,\r\n    //     },\r\n    //     auth: {\r\n    //       username: \"danabijak\",\r\n    //       password: \"iVpZk1C0AFFwDfDV\",\r\n    //     },\r\n    //     url: \"https://front-end-test-assignment.fintech-market.com/api/v1/accounts/search\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //   });\r\n\r\n    //   this.accounts = response.data.data;\r\n    // },\r\n    async resetAccounts() {\r\n      this.searchAccount = \"\";\r\n    },\r\n    async listAccountsType(val) {\r\n      if (val.key.length > 1) {\r\n        if (val.key === \"Backspace\") {\r\n          this.searchAccount = this.searchAccount.slice(0, -1);\r\n        }\r\n      } else {\r\n        this.searchAccount += val.key;\r\n        if (this.searchAccount.length >= 3) {\r\n          const response = await axios({\r\n            method: \"post\",\r\n            data: {\r\n              name: this.searchAccount,\r\n            },\r\n            auth: {\r\n              username: \"danabijak\",\r\n              password: \"iVpZk1C0AFFwDfDV\",\r\n            },\r\n            url: \"https://front-end-test-assignment.fintech-market.com/api/v1/accounts/search\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n\r\n          await response.data.data.forEach((e) => {\r\n            this.accounts.push({\r\n              id: e.id,\r\n              name: e.name,\r\n              code: e.number,\r\n            });\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async saveAccount() {\r\n      if (this.account.name == \"\") {\r\n        await this.resetSnackBar();\r\n\r\n        this.snackBar.display = true;\r\n        this.snackBar.message = \"Fill up Account Name\";\r\n        this.snackBar.color = \"error\";\r\n        return false;\r\n      }\r\n\r\n      if (this.account.balance < 0) {\r\n        await this.resetSnackBar();\r\n\r\n        this.snackBar.display = true;\r\n        this.snackBar.message = \"You cant fill up balance less than zero\";\r\n        this.snackBar.color = \"error\";\r\n        return false;\r\n      }\r\n\r\n      if (this.action === \"Add\") {\r\n        const response = await axios({\r\n          method: \"post\",\r\n          data: {\r\n            data: {\r\n              name: this.account.name,\r\n              balance: parseFloat(this.account.balance),\r\n            },\r\n          },\r\n          auth: {\r\n            username: \"danabijak\",\r\n            password: \"iVpZk1C0AFFwDfDV\",\r\n          },\r\n          url: \"https://front-end-test-assignment.fintech-market.com/api/v1/accounts\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (response.status === 201) {\r\n          this.$emit(\"response\", {\r\n            data: {\r\n              display: true,\r\n              message: \"Account added successfully\",\r\n              color: \"success\",\r\n            },\r\n          });\r\n          this.show = false;\r\n        }\r\n      }\r\n      if (this.action === \"Edit\") {\r\n        const response = await axios({\r\n          method: \"patch\",\r\n          data: {\r\n            data: {\r\n              name: this.account.name,\r\n              balance: parseFloat(this.account.balance),\r\n            },\r\n          },\r\n          auth: {\r\n            username: \"danabijak\",\r\n            password: \"iVpZk1C0AFFwDfDV\",\r\n          },\r\n          url:\r\n            \"https://front-end-test-assignment.fintech-market.com/api/v1/accounts/\" +\r\n            this.account.id,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          this.$emit(\"response\", {\r\n            data: {\r\n              display: true,\r\n              message: \"Account updated successfully\",\r\n              color: \"success\",\r\n            },\r\n          });\r\n          this.show = false;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // this.listAccounts()\r\n  },\r\n};\r\n</script>\r\n<style lang=\"postcss\" scoped>\r\nv-divider {\r\n  border-top: 1px solid #f1f1f1;\r\n}\r\n</style>\r\n"]}]}